{"version":3,"sources":["types/FilterBy.ts","components/Header.tsx","components/TodoItem.tsx","components/TodoList.tsx","components/FilterNavLink.tsx","components/TodoFilter.tsx","components/Footer.tsx","components/TodoApp.tsx","utils/useLocalStorage.tsx","App.tsx","index.tsx"],"names":["FilterBy","Header","onAddTodo","useState","inputValue","setInputValue","className","onSubmit","event","preventDefault","trim","value","onChange","target","type","data-cy","placeholder","TodoItem","todo","toggleCompleted","onRemoveTodo","onRename","isEditing","setIsEditing","title","newTitle","setNewTitle","selectFieldRef","useRef","handleTitleChange","length","id","useEffect","current","focus","classNames","completed","editing","checked","onDoubleClick","aria-label","onClick","ref","onKeyDown","key","onBlur","TodoList","todos","map","FilterNavLink","to","isActive","selected","TodoFilter","Footer","onRemoveAllCompletedTodos","notCompletedITodoLeft","useMemo","filter","completedTodoLength","TodoApp","initialValue","valueInStorage","localStorage","getItem","JSON","parse","setValue","valueToSave","setItem","stringify","useLocalStorage","setTodos","location","useLocation","filteredTodos","pathname","slice","active","all","isToggledAll","every","handleRemoveTodo","useCallback","todoId","updatedTodos","newTodo","Date","areAllTodosCompleted","toggledTodos","htmlFor","deletedTodos","App","path","index","element","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.6765ef06.chunk.js","sourcesContent":["// eslint-disable-next-line no-shadow\nexport enum FilterBy {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import React, { useState } from 'react';\n\ntype Props = {\n  onAddTodo: (value: string) => void;\n};\n\nexport const Header: React.FC<Props> = ({ onAddTodo }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleFormChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleSubmitForm = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!inputValue.trim()) {\n      return;\n    }\n\n    onAddTodo(inputValue);\n    setInputValue('');\n  };\n\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n\n      <form onSubmit={handleSubmitForm}>\n        <input\n          value={inputValue}\n          onChange={handleFormChange}\n          type=\"text\"\n          data-cy=\"createTodo\"\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n        />\n      </form>\n    </header>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState, useRef, useEffect } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  toggleCompleted: (value: number) => void;\n  onRemoveTodo: (value: number) => void;\n  onRename:(val1: number, val2: string) => void;\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  toggleCompleted,\n  onRemoveTodo,\n  onRename,\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [newTitle, setNewTitle] = useState(todo.title);\n\n  const selectFieldRef = useRef<HTMLInputElement>(null);\n\n  const handleCheckboxClick = () => {\n    toggleCompleted(todo.id);\n  };\n\n  const handleDoubleClick = () => {\n    setIsEditing(true);\n  };\n\n  const handleTitleEditing = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewTitle(event.target.value);\n  };\n\n  const handleTitleChange = () => {\n    if (!newTitle.length || !newTitle.trim()) {\n      onRemoveTodo(todo.id);\n      setIsEditing(false);\n\n      return;\n    }\n\n    onRename(todo.id, newTitle);\n    setIsEditing(false);\n  };\n\n  const handleSavingTitle = (event: React.KeyboardEvent) => {\n    if (event.key === 'Enter') {\n      handleTitleChange();\n\n      return;\n    }\n\n    if (event.key === 'Escape') {\n      setNewTitle(todo.title);\n      setIsEditing(false);\n    }\n  };\n\n  useEffect(() => {\n    if (selectFieldRef.current) {\n      selectFieldRef.current.focus();\n    }\n  });\n\n  return (\n    <li\n      className={classNames(\n        { completed: todo.completed },\n        { editing: isEditing },\n      )}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id=\"toggle-view\"\n          checked={todo.completed}\n          onChange={handleCheckboxClick}\n        />\n        <label\n          onDoubleClick={handleDoubleClick}\n        >\n          {newTitle}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          data-cy=\"deleteTodo\"\n          aria-label=\"button\"\n          onClick={() => onRemoveTodo(todo.id)}\n        />\n      </div>\n      <input\n        type=\"text\"\n        className=\"edit\"\n        value={newTitle}\n        ref={selectFieldRef}\n        onChange={handleTitleEditing}\n        onKeyDown={handleSavingTitle}\n        onBlur={handleTitleChange}\n      />\n    </li>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../types/Todo';\nimport { TodoItem } from './TodoItem';\n\ntype Props = {\n  todos: Todo[];\n  onRemoveTodo: (value: number) => void;\n  toggleCompleted: (value: number) => void;\n  onRename:(val1: number, val2: string) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos, toggleCompleted, onRemoveTodo, onRename,\n}) => {\n  return (\n    <ul className=\"todo-list\" data-cy=\"todoList\">\n      {todos.map((todo) => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          toggleCompleted={toggleCompleted}\n          onRemoveTodo={onRemoveTodo}\n          onRename={onRename}\n        />\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string;\n  title: string;\n};\n\nexport const FilterNavLink:React.FC<Props> = ({ to, title }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => classNames({ selected: isActive })}\n    >\n      {title}\n    </NavLink>\n  );\n};\n","import React from 'react';\nimport { FilterNavLink } from './FilterNavLink';\n\nexport const TodoFilter:React.FC = () => {\n  return (\n    <ul className=\"filters\" data-cy=\"todosFilter\">\n      <li>\n        <FilterNavLink to=\"/\" title=\"all\" />\n      </li>\n      <li>\n        <FilterNavLink to=\"/active\" title=\"active\" />\n      </li>\n      <li>\n        <FilterNavLink to=\"/completed\" title=\"completed\" />\n      </li>\n    </ul>\n  );\n};\n","import React, { useMemo } from 'react';\nimport { Todo } from '../types/Todo';\nimport { TodoFilter } from './TodoFilter';\n\ntype Props = {\n  todos: Todo[];\n  onRemoveAllCompletedTodos: () => void;\n};\n\nexport const Footer: React.FC<Props> = ({\n  todos,\n  onRemoveAllCompletedTodos,\n}) => {\n  const notCompletedITodoLeft = useMemo(() => {\n    return todos.filter(todo => !todo.completed);\n  }, [todos]);\n\n  const completedTodoLength = useMemo(() => {\n    return todos.filter(todo => todo.completed).length;\n  }, [todos]);\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\" data-cy=\"todosCounter\">\n        {`${notCompletedITodoLeft.length} items left`}\n      </span>\n\n      <TodoFilter />\n\n      {!!completedTodoLength && (\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={onRemoveAllCompletedTodos}\n        >\n          Clear completed\n        </button>\n      )}\n    </footer>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useCallback, useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Todo } from '../types/Todo';\nimport { FilterBy } from '../types/FilterBy';\nimport { Header } from './Header';\nimport { TodoList } from './TodoList';\nimport { Footer } from './Footer';\nimport { useLocalStorage } from '../utils/useLocalStorage';\n\nexport const TodoApp: React.FC = () => {\n  const [todos, setTodos] = useLocalStorage('todos', []);\n  const location = useLocation();\n\n  const filteredTodos = useMemo(() => {\n    return todos.filter((todo: Todo) => {\n      switch (location.pathname.slice(1)) {\n        case FilterBy.active:\n          return !todo.completed;\n\n        case FilterBy.completed:\n          return todo.completed;\n\n        case FilterBy.all:\n        default:\n          return todo;\n      }\n    });\n  }, [todos, location]);\n\n  const addTodo = (title: string) => {\n    const newTodo = {\n      id: +new Date(),\n      completed: false,\n      title,\n    };\n\n    setTodos([...todos, newTodo]);\n  };\n\n  const toggleCompleted = (todoId: number) => {\n    const updatedTodos = todos.map((todo: Todo) => {\n      if (todo.id === todoId) {\n        return { ...todo, completed: !todo.completed };\n      }\n\n      return todo;\n    });\n\n    setTodos(updatedTodos);\n  };\n\n  const handleToggleAllTodos = () => {\n    const areAllTodosCompleted = todos.every((todo: Todo) => todo.completed);\n\n    const toggledTodos = todos\n      .map((todo: Todo) => ({ ...todo, completed: !areAllTodosCompleted }));\n\n    setTodos(toggledTodos);\n  };\n\n  const isToggledAll = useMemo(() => {\n    return todos.every((todo: Todo) => todo.completed);\n  }, [todos]);\n\n  const handleRemoveTodo = useCallback((todoId: number) => {\n    const updatedTodos = todos.filter((todo: Todo) => todo.id !== todoId);\n\n    setTodos(updatedTodos);\n  }, [todos]);\n\n  const handleRemoveAllComplitedTodos = () => {\n    const deletedTodos = todos.filter((todo: Todo) => !todo.completed);\n\n    setTodos(deletedTodos);\n  };\n\n  const editTodo = (todoId: number, title: string) => {\n    setTodos(todos.map((todo: Todo) => {\n      if (todo.id !== todoId) {\n        return todo;\n      }\n\n      return { ...todo, title };\n    }));\n  };\n\n  return (\n    <div className=\"todoapp\">\n      <Header\n        onAddTodo={addTodo}\n      />\n\n      <section className=\"main\">\n        {!!todos.length && (\n          <>\n            <input\n              type=\"checkbox\"\n              id=\"toggle-all\"\n              className=\"toggle-all\"\n              data-cy=\"toggleAll\"\n              checked={isToggledAll}\n              onChange={handleToggleAllTodos}\n            />\n            <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          </>\n        )}\n\n        <TodoList\n          toggleCompleted={toggleCompleted}\n          todos={filteredTodos}\n          onRemoveTodo={handleRemoveTodo}\n          onRename={editTodo}\n        />\n      </section>\n\n      {!!todos.length && (\n        <Footer\n          todos={todos}\n          onRemoveAllCompletedTodos={handleRemoveAllComplitedTodos}\n        />\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { Todo } from '../types/Todo';\n\nexport const useLocalStorage = (key: string, initialValue: Todo[]) => {\n  const [value, setValue] = useState(() => {\n    try {\n      const valueInStorage = localStorage.getItem(key);\n\n      return valueInStorage ? JSON.parse(valueInStorage) : initialValue;\n    } catch {\n      return initialValue;\n    }\n  });\n\n  const saveValue = (valueToSave: Todo[]) => {\n    setValue(valueToSave);\n    localStorage.setItem(key, JSON.stringify(valueToSave));\n  };\n\n  return [value, saveValue];\n};\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { TodoApp } from './components/TodoApp';\n\nexport const App = () => (\n\n  <Routes>\n    <Route path=\"/\">\n      <Route index element={<TodoApp />} />\n      <Route path=\"/active\" element={<TodoApp />} />\n      <Route path=\"/completed\" element={<TodoApp />} />\n    </Route>\n  </Routes>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport { App } from './App';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement,\n);\n\nroot.render(\n  <Router>\n    <App />\n  </Router>,\n);\n"],"sourceRoot":""}